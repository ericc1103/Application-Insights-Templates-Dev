{
  "version": "Notebook/1.0",
  "isLocked": false,
  "items": [
    {
      "type": 1,
      "content": {
        "json": "# Cohort Analysis\n\nCohort Analysis measures how many of your users come back to perform one of the `RetainingActivities` in a particular period after they perform one of the `CohortingActivities` in your app - split by a dimension you choose. For instance, you could be measuring the number of users who returned to use your app on the 10th day from the day they first downloaded it, split by the country they are from. Seeing the retention trend for days 1-10 will give you an indication of the stickiness of your app. \n\nCohort Analysis is similar to N-day or Bracket retention and is only different in how the cohorts are defined. \n\nThis type of analysis is well-suited for gaming apps, or other kinds of app where you are trying to get users to develop a daily habit. Cohort Analysis will help you see differences in user retention across standard dimensions like country, app version, etc. or custom dimensions like 'Is Premium Customer' or 'Flight name in an experiment group'."
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 1,
      "content": {
        "json": "### Activity Selection\nUse these fields to set events that that correspond to interesting user activities. The `Understanding Cohort Analysis Parameters` section at the bottom describes these parameters in detail."
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "query": "",
        "crossComponentResources": [],
        "parameters": [
          {
            "id": "97ae2ae5-ec95-455b-bac2-36caf2db61db",
            "version": "KqlParameterItem/1.0",
            "name": "CohortingActivities",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "let events = union customEvents, pageViews\n| where timestamp >= ago(7d)\n| summarize Count = count() by name;\nlet top3 = events\n| top 3 by Count desc\n| summarize makelist(name);\nevents\n| order by Count desc\n| project Id=name, Title=name, Selected=iff(name in (top3), true, false)\n| union (\ndatatable(Id:string, Title:string, Selected:boolean)[\n'*', 'All Events and Page Views', false\n]\n)"
          },
          {
            "name": "CohortingFilters",
            "id": "94bacf68-78db-4755-8a40-c2702dea4018",
            "type": 1,
            "value": ""
          },
          {
            "id": "6cb4afed-7dac-4608-892b-154f4943ddb6",
            "version": "KqlParameterItem/1.0",
            "name": "RetainingActivities",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "union customEvents, pageViews\n| where timestamp >= ago(7d)\n| summarize count() by name\n| order by count_ desc\n| project Id=name, Title=name, Selected=false\n| union (\ndatatable(Id:string, Title:string, Selected:boolean)[\n'#', 'Same as cohorting activities', true,\n'*', 'All Events and Page Views', false\n]\n)"
          },
          {
            "id": "0cc5211a-557e-4648-9569-1236bf16559f",
            "version": "KqlParameterItem/1.0",
            "name": "RetainingFilters",
            "type": 1,
            "isRequired": false,
            "query": "datatable(x:int)[ 1 ]\r\n| extend retainingFilter = iff('#' in ({RetainingActivities}), '{CohortingFilters}', '')\r\n| project retainingFilter",
            "isHiddenWhenLocked": false
          }
        ]
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 1,
      "content": {
        "json": "## Cohort Analysis Parameters\nUse these fields to customize your retention settings."
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "query": "",
        "crossComponentResources": [],
        "parameters": [
          {
            "id": "1c53914e-0c06-4944-b2b8-fd4abaeb2f9f",
            "version": "KqlParameterItem/1.0",
            "name": "CohortType",
            "type": 2,
            "description": null,
            "isRequired": true,
            "multiSelect": null,
            "query": "datatable(value:string, text:string)[\n'itemType', '❌ None',\n'name', '📛 Activity',\n'cloud_RoleInstance', '🖥️ Machine',\n'client_CountryOrRegion', '📍 Country or Region',\n'client_StateOrProvince', '📍 State or Province',\n'client_City', '📍 City',\n'client_Browser', '🌐 Client Browser',\n'client_OS', '️️🖥️ Client Operating System',\n'client_Model', '📱 Client Model',\n'application_Version', '⚪ Application Version',\n'operation_Name', '⚪ Operation',\n]\n| union (union pageViews, customEvents\n| where timestamp >= ago(1d)\n| where name in ({CohortingActivities}) or '*' in ({CohortingActivities})\n| project customDimensions \n| summarize schema = buildschema(customDimensions) \n| mvexpand schema\n| extend e = extract(@'{\"(.+)\":.+}', 1, tostring(schema))\n| project text = strcat('❄️ ', e), value = strcat('customDimensions[\"', e, '\"]'))",
            "value": "name"
          },
          {
            "id": "e62098ae-ac3f-4800-8e62-3e7d9a052e56",
            "version": "KqlParameterItem/1.0",
            "name": "RetentionPeriod",
            "type": 2,
            "description": "1d: Daily, 7d: Weekly, 30/28d: Monthly",
            "isRequired": true,
            "multiSelect": null,
            "query": "datatable(id:string, text:string)[\n'1d', 'Daily',\n'7d', 'Weekly',\n'28d', 'Monthly (28 days)', \n'30d', 'Monthly (30 days)'\n]",
            "value": "7d"
          },
          {
            "id": "fa4b29d9-bfc1-46e3-98f1-3cba05afbea3",
            "version": "KqlParameterItem/1.0",
            "name": "PeriodsToAnalyze",
            "type": 1,
            "description": "Number of cohort periods to analyze",
            "isRequired": true,
            "value": "4"
          },
          {
            "id": "7912aca9-1688-4886-aec1-838c68131e25",
            "version": "KqlParameterItem/1.0",
            "name": "BasedOn",
            "type": 2,
            "description": null,
            "isRequired": true,
            "multiSelect": null,
            "query": "datatable(v:string, t:string)[\r\n'user_Id', 'Anonymous Users',\r\n'user_AuthenticatedId', 'Authenticated Users'\r\n]",
            "isHiddenWhenLocked": false,
            "value": "user_Id"
          }
        ]
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 1,
      "content": {
        "json": "## Cohort Analysis Table"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let periodsToAnalyze = {PeriodsToAnalyze};\nlet cohortSize = {RetentionPeriod};\nlet retainingActivities = iff('#' in ({RetainingActivities}), dynamic([{CohortingActivities}]), dynamic([{RetainingActivities}]));\nlet cohortUnit = case(cohortSize == 30d or cohortSize == 28d, \"month\", cohortSize == 7d, \"week\", \"day\");\nlet timeRange = startofday(now()) - case(cohortSize == 30d or cohortSize == 28d, startofmonth(now() - periodsToAnalyze * cohortSize), cohortSize == 7d, startofweek(now() - periodsToAnalyze * cohortSize), startofday(now() - periodsToAnalyze * cohortSize));\nlet cohorts = union customEvents, pageViews\n| where timestamp > startofday(now() - timeRange)\n| where name in ({CohortingActivities}) or '*' in ({CohortingActivities})\n{CohortingFilters}\n| extend Cohort = iff('{CohortType}' == 'itemType', 'Overall', iff({CohortType} == '', 'Unknown', {CohortType})) // reusing itemType to indicate no segmentation\n| summarize EarliestInCohort = min(startofday(timestamp)) by {BasedOn}, Cohort\n| summarize UsersInCohort = hll({BasedOn}) by EarliestInCohort, Cohort;\nlet users = union customEvents, pageViews\n| where timestamp > startofday(now() - timeRange)\n| where name in (retainingActivities) or '*' in (retainingActivities)\n{RetainingFilters}\n| extend Cohort = iff('{CohortType}' == 'itemType', 'Overall', iff({CohortType} == '', 'Unknown', {CohortType})) // reusing itemType to indicate no segmentation\n| summarize Users = hll({BasedOn}) by Day = startofday(timestamp), Cohort;\nlet Retention = materialize(\n    range i from 0d to timeRange step 1d\n    | extend Day = startofday(now() - i)\n    | extend RetentionRange = range(1d, timeRange, 1d)\n    | mvexpand RetentionRange limit 10000\n    | extend RetentionDay = Day + totimespan(RetentionRange)\n    | extend RetentionWeek = toint(totimespan(RetentionRange) / cohortSize)\n    | where RetentionDay <= startofday(now())\n    | project Day, RetentionDay, RetentionWeek\n    | join kind=inner\n    (\n        users\n        | project UsersOnDay = Users, RetentionDay = Day, Cohort\n    )\n    on RetentionDay\n    | summarize UsersForRetentionWeek = hll_merge(UsersOnDay) by Day, RetentionWeek, Cohort\n    | join kind=inner\n    (\n        cohorts\n        | project UsersInCohort, Cohort, Day = EarliestInCohort\n    )\n    on Day\n    | where Cohort == Cohort1\n    | project-away Day1, Cohort1\n    | evaluate dcount_intersect(UsersInCohort, UsersForRetentionWeek)\n    | summarize RetainedUsers = sum(s1) by Cohort, RetentionWeek \n);\ncohorts\n| summarize UsersInCohort = hll_merge(UsersInCohort) by Cohort\n| project Cohort, CohortUsers = dcount_hll(UsersInCohort)\n| join kind=inner\n(\n    Retention\n)\non Cohort\n| project-away Cohort1\n| extend RetentionRate = round(100.0 * RetainedUsers / CohortUsers, 2)\n| project-away RetainedUsers\n| order by CohortUsers desc, RetentionWeek asc\n| serialize rank = row_number()\n| extend RetentionWeek = case(RetentionWeek == 0, strcat(\"<1 \", cohortUnit), strcat(\"+\", RetentionWeek, \" \", cohortUnit))\n| order by rank asc\n| project Cohort, ['Users'] = CohortUsers, RetentionWeek, RetentionRate\n| evaluate pivot(RetentionWeek, sum(RetentionRate))",
        "showQuery": false,
        "size": 0,
        "aggregation": 0,
        "showAnnotations": false,
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "week|month|day",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "max": null,
                "palette": "green"
              }
            }
          ]
        }
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 1,
      "content": {
        "json": "## Interpreting the table\nThis section shows how to read and interpret a retention table. The section below shows a row from a weekly retention report that we will try to read.\n"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "datatable(Cohort:string, Users:int, ['<1 week']:int, ['+1 week']:int, ['+2 week']:int, ['+3 week']:int, ['+4 week']:int)[ \r\n'Add to Cart', 1000, 50, 30, 20, 15, 10\r\n]\r\n",
        "showQuery": false,
        "size": 0,
        "aggregation": 0,
        "showAnnotations": false,
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "week",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "max": null,
                "palette": "green"
              }
            }
          ]
        }
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 1,
      "content": {
        "json": "| Column | Explanation | Interpretation in the example |\n| ----- | :----- | :----- |\n| Cohort | Identifies the cohorting criteria specified by the CohortType parameter. | This row explains the retention behavior of users who used the 'Add to Cart' event. |\n| Users | Number of unique users who used the Add to Cart feature  | 1000 unique users added an item to their cart in your app |\n| <1 week | Percentage of cohort users who returned between 1 and 6 days after using 'Add to Cart' (using it again the same day does not count towards retention)  | 50% or 500 users returned to use your app within the first week after they added an item to their cart |\n| +1 week | Percentage of cohort users who returned between 7 and 13 days after using 'Add to Cart'  | 30% or 300 users returned to use your app a week later |\n| +N week | Percentage of cohort users who returned in the Nth week after 'Add to Cart'  | 15% or 150 users, when N = 3  |\n\n\n\n\n"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 1,
      "content": {
        "json": "## Understanding Cohort Analysis Parameters\n| Parameter | Used for |\n| ----- | ----- |\n| Cohort Type | The dimension by which to split the retention numbers |\n| Retention Period | The period to use in retention calculation. Can be Daily, Weekly or Monthly |\n| Periods To Analyze  | The number of retention periods to analyze.  |\n| Cohorting Activities  | The activities that selects a cohort of users. Example: Users who used event *Read Product Review* (cohorting activity). |\n| Retaining Activities  | The activities that indicates retention of a cohorted user selected above. Example: Users who used event *Read Product Review* (cohorting activity) and returned to use *Purchase Product* (retaining activity). |\n| Cohorting/Retaining Filters  | An analytics query snippet to further filter the cohorting activity. Example: *&#124; where application_Version = '1.0'* |\n"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 1,
      "content": {
        "json": "## What is a week for a user?\nThe short answer is that it is unique for each user. Our analysis treats each user's retention window seperately - giving an accurate view of their actual behavior with your app. \n\nConsider the example below of two users X and Y: \n\n| User | First use of app | Weeks for user |\n| ----- | :----- | :----- |\n| X | April 3 | w1 = April 10, w2 = April 17, w3 = April 24  |\n| Y | April 5 | w1 = April 12, w2 = April 19, w3 = April 26  |\n\nEach user gets a seperate retention window. So, if both users came back on April 18, then it considered as Week 2 usage for User X but Week 1 usage for User Y. \n\nThis allows the normalization their app use over the retention window - making it seem as if all users in a cohort used the app on the same day. This allow for better analysis and comparision of user behavior."
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 1,
      "content": {
        "json": "## Related Workbook Templates\n* Retention - N-Period\n* Retention - Unbounded\n* Retention - Bracket"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    }
  ]
}